name: Update JSON from Markdown

on:
  push:
    paths:
    - 'src/data/channels.md'
  workflow_dispatch:

jobs:
  convert:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
      
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
        
    - name: Convert Markdown to JSON
      run: |
        python3 << 'EOF'
        from pathlib import Path
        import re
        import json
        
        def md_table_to_json(md_file):
            # Read Markdown file
            md_content = Path(md_file).read_text(encoding='utf-8')
            
            # Split the file into lines
            lines = md_content.strip().split('\n')
            
            # Find the table in the Markdown file
            table_lines = []
            in_table = False
            header_line = None
            separator_line = None
            
            for line in lines:
                line = line.strip()
                if line.startswith('|') and line.endswith('|'):
                    if not in_table:
                        in_table = True
                        header_line = line
                    elif header_line and not separator_line and '---' in line:
                        separator_line = line
                    elif header_line and separator_line:
                        table_lines.append(line)
            
            if not header_line or not separator_line:
                print("❌ Error: No valid table found in the Markdown file.")
                return []
            
            # Extract header fields
            header_fields = [field.strip() for field in header_line.split('|')[1:-1]]
            
            if len(header_fields) != 5:
                print(f"❌ Error: Expected 5 columns in table header, found {len(header_fields)}.")
                return []
            
            # Process each row
            channels = []
            for row_line in table_lines:
                fields = [field.strip() for field in row_line.split('|')[1:-1]]
                
                if len(fields) != 5:
                    print(f"⚠️ Warning: Skipping row with {len(fields)} fields instead of 5: {row_line}")
                    continue
                
                channel_name = fields[0]
                
                # Extract link - handle markdown link format [text](url)
                link_cell = fields[1]
                link_match = re.search(r'\[(.*?)\]\((.*?)\)', link_cell)
                if link_match:
                    link = link_match.group(2)
                else:
                    link = link_cell
                
                status = fields[2]
                
                # Extract tags
                tags_cell = fields[3]
                tags = [tag.strip() for tag in tags_cell.split(',')] if tags_cell else []
                
                description = fields[4]
                
                # Create channel object
                channel = {
                    "name": channel_name,
                    "link": link,
                    "status": status,
                    "tags": tags,
                    "description": description
                }
                
                channels.append(channel)
            
            return channels
        
        # Convert MD to JSON
        channels_data = md_table_to_json('src/data/channels.md')
        
        # Write to channels.json
        with open('src/data/channels.json', 'w', encoding='utf-8') as json_file:
            json.dump(channels_data, json_file, ensure_ascii=False, indent=2)
            
        print(f"Converted channels.md to channels.json - {len(channels_data)} channels processed")
        EOF
        
    - name: Configure Git
      run: |
        git config --global user.name 'GitHub Actions'
        git config --global user.email 'actions@github.com'
        
    - name: Commit changes
      run: |
        git add src/data/channels.json
        git diff --staged --quiet || git commit -m "Auto-update channels.json from channels.md"
        
    - name: Push changes
      run: git push 